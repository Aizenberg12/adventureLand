package menu

import (
	"fmt"
	tg "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	v "github.com/spf13/viper"
	"project0/src/controllers/userMapController"
	"project0/src/models"
	"project0/src/repositories"
)

func Menu(update tg.Update, user models.User) (msg string, buttons tg.InlineKeyboardMarkup) {
	switch update.CallbackQuery.Data {
	case "/map":
		msg, buttons = userMapController.GetMyMap(user)
		user = repositories.UpdateUser(models.User{TgId: user.TgId, MenuLocation: "ÐšÐ°Ñ€Ñ‚Ð°"})
	case "/menu", v.GetString("user_location.menu"):
		msg = "ðŸ“– ÐœÐµÐ½ÑŽ ðŸ“–"
		buttons = MainKeyboard(user.Avatar)
		repositories.UpdateUser(models.User{TgId: user.TgId, MenuLocation: "ÐœÐµÐ½ÑŽ"})
	case "ðŸ—º ÐšÐ°Ñ€Ñ‚Ð° ðŸ—º":
		msg, buttons = userMapController.GetMyMap(user)
		repositories.UpdateUser(models.User{TgId: user.TgId, MenuLocation: "ÐšÐ°Ñ€Ñ‚Ð°"})
	case fmt.Sprintf("%s ÐŸÑ€Ð¾Ñ„Ð¸Ð»ÑŒ ðŸ‘”", user.Avatar):
		msg = user.GetUserInfo()
		buttons = ProfileKeyboard(user.Avatar)
		repositories.UpdateUser(models.User{TgId: user.TgId, MenuLocation: "ÐŸÑ€Ð¾Ñ„Ð¸Ð»ÑŒ"})
	}

	return msg, buttons
}

func UserMenuLocation(update tg.Update, user models.User) (msg tg.MessageConfig, buttons tg.InlineKeyboardMarkup) {
	newMessage := update.Message.Text
	fmt.Println("newMsg: ", newMessage)

	switch newMessage {
	case "/userMapConfiguration":
		msg.Text, buttons = userMapController.GetMyMap(user)
		user = repositories.UpdateUser(models.User{TgId: user.TgId, MenuLocation: "ÐšÐ°Ñ€Ñ‚Ð°"})
	default:
		msg.Text = "ÐœÐµÐ½ÑŽ"
		buttons = MainKeyboard(user.Avatar)
		repositories.UpdateUser(models.User{TgId: user.TgId, MenuLocation: "ÐœÐµÐ½ÑŽ"})
	}

	return msg, buttons
}
