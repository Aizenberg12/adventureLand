package learningController

import (
	"fmt"
	tg "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	v "github.com/spf13/viper"
	"project0/src/actions/mapsActions"
	"project0/src/controllers/userMapController"
	"project0/src/models"
	"project0/src/repositories"
	"strings"
)

func learningStep1(data string, user models.User) (text string, buttons tg.InlineKeyboardMarkup) {
	info := "*–®–∞–≥ 1:*\n–í–∏–¥–∏—à—å —Å–Ω–∏–∑—É –∫–Ω–æ–ø–∫–∏-—Å—Ç—Ä–µ–ª–æ—á–∫–∏ (‚óÄÔ∏è üîº ‚ñ∂Ô∏è üîΩ)? –û–Ω–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç —Ç–µ–±–µ —Ö–æ–¥–∏—Ç—å!\n–ü–æ–ø—Ä–æ–±—É–π –ø—Ä–æ–π—Ç–∏—Å—å –ø–æ –∫–∞—Ä—Ç–µ, –∞ –∫–∞–∫ –æ—Å–≤–æ–∏—à—å—Å—è, –±–µ—Ä–∏ –∫–≤–µ—Å—Ç \U0001FAA7 –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ –∏ –∑–∞—Ö–æ–¥–∏ –≤ –¥–≤–µ—Ä—å üö™"
	infoNextStep := "*–®–∞–≥ 2:*\n–ó–¥–µ—Å—å —Ç—ã –Ω–∞—É—á–∏—à—å—Å—è –¥–æ–±—ã–≤–∞—Ç—å —Ä–µ—Å—É—Ä—Å—ã!\n–ò—Å—Å–ª–µ–¥—É–π –º–µ—Å—Ç–Ω–æ—Å—Ç—å, –Ω–µ –±–æ–π—Å—è –Ω–∞–∂–∏–º–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫–∏ –∏ –Ω–µ –∑–∞–±—É–¥—å –≤–∑—è—Ç—å –ø–æ–¥–∞—Ä–æ—á–∫–∏ üéÅ —Å–≤–µ—Ä—Ö—É, —Ç–∞–º —Ç—ã –ø–æ–ª—É—á–∏—à—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã!"

	switch true {
	case strings.Contains(data, "goodsMoving"), strings.Contains(data, "–ú–µ–Ω—é"), strings.Contains(data, "category"):
		text, buttons = userMapController.GetMyMap(user)
		text = fmt.Sprintf("%s%s%s%s‚ùóÔ∏è –ü–æ–∫–∞ –µ—â–µ —Ä–∞–Ω–æ —ç—Ç–æ –Ω–∞–∂–∏–º–∞—Ç—å ü§´", info, v.GetString("msg_separator"), text, v.GetString("msg_separator"))
	case strings.Contains(data, "move 22"):
		user.MenuLocation = "learning step2"
		repositories.UpdateUser(user)

		text, buttons = mapsActions.MapsActions(user, data)
		text = fmt.Sprintf("%s%s%s", infoNextStep, v.GetString("msg_separator"), text)
	default:
		text, buttons = mapsActions.MapsActions(user, data)
		text = fmt.Sprintf("%s%s%s", info, v.GetString("msg_separator"), text)
	}

	return text, buttons
}
