package learningController

import (
	"fmt"
	tg "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	v "github.com/spf13/viper"
	"project0/src/actions/mapsActions"
	"project0/src/controllers/mapController"
	"project0/src/models"
	"project0/src/repositories"
	"strings"
)

func learningStep5(data string, user models.User) (text string, buttons tg.InlineKeyboardMarkup) {
	if len(data) == 0 {
		return
	}
	sep := v.GetString("msg_separator")

	info := "–ò—Å–ø–æ–ª—å–∑—É–π –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã, —á—Ç–æ–± —Å–æ–±—Ä–∞—Ç—å —Ä–µ—Å—É—Ä—Å—ã –∏ —Ä–∞—Å—á–∏—Å—Ç–∏—Ç—å —Å–µ–±–µ –ø—É—Ç—å –¥–ª—è –¥–≤–µ—Ä–∏:\n" +
		"\U0001FA93 - —Ç–æ–ø–æ—Ä –¥–ª—è –¥–µ—Ä–µ–≤—å–µ–≤\n" +
		"‚õè - –∫–∏—Ä–∫–∞ –¥–ª—è –∫–∞–º–Ω–µ–π\n" +
		"üé© - —à–ª—è–ø–∞, —á—Ç–æ–± –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–µ–¥–º–µ—Ç–µ\n\n" +
		"–î–æ–±—ã—Ç—ã–µ —Ä–µ—Å—É—Ä—Å—ã –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ —Ä—é–∫–∑–∞–∫–µ"

	infoNextStep := "–û–π, –Ω–µ –±–æ–π—Å—è, –ø—Ä–∏–∑—Ä–∞–∫–æ–≤ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!\n" +
		"–ü–µ—Ä–µ–¥ —Ç–æ–±–æ–π –ª–µ–∂–∏—Ç üéÅ c üî¶ –≤–Ω—É—Ç—Ä–∏, –≤–æ–∑—å–º–∏ –µ–≥–æ!\n" +
		"–ó–∞–π–¥–∏ –≤ –í–µ—â–∏ üß¶ –∏ –ù–∞–¥–µ–Ω—å ‚úÖ —Ñ–æ–Ω–∞—Ä–∏–∫ üî¶, –∏ —Ç–æ–≥–¥–∞ —Å–º–æ–∂–µ—à—å —Ä–∞–∑–≤–µ—è—Ç—å –Ω–æ—á—å!"

	switch true {
	case strings.Contains(data, "–ú–µ–Ω—é"):
		text, buttons = mapController.GetMyMap(user)
		text = fmt.Sprintf("%s%s%s%s‚ùóÔ∏è –ü–æ–∫–∞ –µ—â–µ —Ä–∞–Ω–æ —ç—Ç–æ –Ω–∞–∂–∏–º–∞—Ç—å ü§´", info, v.GetString("msg_separator"), text, v.GetString("msg_separator"))

	case strings.Contains(data, "move 44209"):
		text, buttons = mapsActions.MapsActions(user, data)
		text = fmt.Sprintf("%s%s%s", infoNextStep, sep, text)

		user.MenuLocation = "learning step6"
		repositories.UpdateUser(user)

	default:
		text, buttons = mapsActions.MapsActions(user, data)
		text = fmt.Sprintf("%s%s%s", info, sep, text)
	}

	return text, buttons
}
